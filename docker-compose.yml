services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    working_dir: /rujourney
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    links:
      - app
    depends_on:
      - app
  certbot:
      image: certbot/certbot
      container_name: certbot
      volumes:
          - ./certbot/conf:/etc/letsencrypt:rw
          - ./certbot/www:/var/www/certbot:rw
      command: certonly --webroot --webroot-path=/var/www/certbot/ --email demmenty@gmail.com --agree-tos --no-eff-email -d 80.87.200.11 -d www.80.87.200.11
      depends_on:
        - nginx
  app:
    build: .
    container_name: rujourney
    volumes:
      - .:/rujourney
    ports:
      - 80:8000
    env_file:
      - ./.env.prod
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
              gunicorn --workers=4 --reload --max-requests=1000 backend.wsgi -b 0.0.0.0:8000"
    depends_on:
      - db
      - minio
      - redis
  db:
    image: postgres:latest
    restart: always
    container_name: postgres
    volumes:
      - postgres_data:/data
      - postgres_backup:/backups
    env_file:
      - ./.env.prod
  minio:
    image: minio/minio:latest
    container_name: minio
    hostname: minio
    command: server /minio_files --console-address ":9001"
    restart: unless-stopped
    volumes:
      - .:/minio_data
      - minio:/data
    env_file:
      - ./.env.prod
    ports:
      - 9000:9000
      - 9001:9001
  create_buckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c '
      /usr/bin/mc alias set minio http://minio:9000 admin password;
      /usr/bin/mc mb minio/rujourney-pictures;
      /usr/bin/mc anonymous set download minio/rujourney-pictures;
      exit 0;
      '
  celery:
    build: .
    container_name: celery
    restart: always
    command: celery --app=rujourney worker --loglevel=info
    volumes:
      - .:/rujourney
    env_file:
      - ./.env.prod
    depends_on:
      - app
      - redis
  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data
volumes:
  minio:
  redis_data:
  postgres_data:
  postgres_backup: